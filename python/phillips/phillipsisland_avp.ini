#
# avp.ini
# Initialization file for avp python code
# 
# Notes. In all cases, if host is absent, `hostname` is used
#
# Common values:
# host = host to which instrument is connected to. If absent, `hostname` is used,
# PORT = socat port
# STALE_TIME = Number of seconds after which data is considered stale
# BROKER_CLIENT = instance name, broker client class name, broker client module name
# [[constants]] these become attributes of the broker client
# [[defaults]] these are values which should be set
# [[aliases]] Assigns alias to a broker's parameter
# First the brokers

[broker]    # Common to all brokers
    SOCKET_TIMEOUT = 15    # Default socket timeout on rpc calls to broker servers.
    RESUME_TIMEOUT = 50    # Default timeout for resume_broker. This should be higher than broker's built in timeout.


[wind]    # RM Young wind instrument
    host = localhost    # defaults to socket.gethostbyname()
    PORT = 8882
    STALE_TIME = 4
	INSTRUMENT_HOST = localhost
    INSTRUMENT_PORT = 55232
    BROKER_CLIENT = wind, WindBroker, y32500
    [[constants]]
		# None defined

[sonde]    # YSI 6600 or 6600v2
    host = localhost    # defaults to socket.gethostbyname()
    PORT = 8883
    STALE_TIME = 4
	INSTRUMENT_HOST = 192.168.1.130
    INSTRUMENT_PORT = 4001
    BROKER_CLIENT = sonde, SondeBroker, ysi6600
    [[constants]]
        SAMPLE_TIMEOUT = 40    # Number of seconds to wait for timeout on a connect
        WIPE_TIMEOUT = 120    # 
        SONDE_STARTUP_TIME = 5.0    # Time in seconds to wait for sonde after sampling has started

[gps]
    host = localhost    # defaults to socket.gethostbyname()
    PORT = 8890
    STALE_TIME = 4
	INSTRUMENT_HOST = localhost
    INSTRUMENT_PORT = 2947
    BROKER_CLIENT = gps, GpsBroker, gps
    [[constants]]
        WARNING_REPEAT_TIME = 600    # in seconds
		
#[flow]
#    host = localhost    # defaults to socket.gethostbyname()
#    PORT = 8889
#    STALE_TIME = 4
#	INSTRUMENT_HOST = 192.168.1.130
#    INSTRUMENT_PORT = 4002
#    BROKER_CLIENT = flow, FlowBroker, flow
#    [[constants]]
#        LOW_THRESH = 5
#		HI_THRESH = 30
		
[supervisor]
    # These may need to be updated with new version numbers
    RELEASE_NUMBER_FILE = None
    JAVA_INSTALL_DIR = /home/pi/javp/target
    JAVA_ARG = -Dpi4j.linking=dynamic
    JAVP_JAR = /javp-*.jar
    JSON_JAR = None
    POSTGRES_JAR = None
    LOCAL_INTERFACE = 0    # Do we have a local interface
#    POST_AIO_BROKER_SLEEP = 5    # Time in sec to sleep after starting aio for the first time
    LOW_DRIVE_THRESHOLD = 0.10    # percent (defaults to 0.1)
    LOW_RAM_THRESHOLD = 0.25    # percent(defaults to 0.1)
    CPU_TEMP_THRESHOLD = 80    # degrees C (cat /proc/acpi/thermal_zone/THRM/temperature) (defaults to 60)
    # designed limit is 90 deg C
    NOTIFY_EMAIL = whipple@email.unc.edu, neve@email.unc.edu 	# (line must contain a comma)
    HOME_PATH = /home/pi
    LOG_PATH = /home/pi/log    # The log directory is here.
    CHECK_FREQ = 2    # How often to start do checks (in minutes)
    LOG_FREQ = 2    # How often to log to database.
    GPS_DEVICE = tcp://localhost:55242
    [[brokerList]]
        gpsd.conf = gps
#        ysi_sonde.conf = sonde
        ysi_exo.conf = sonde
        wind.conf = wind
#	flow.conf = flow
	io.conf = aio


[aio]    # aio must be the first broker in this list.
    host = localhost    # defaults to socket.gethostbyname()
    PORT = 8880
    STALE_TIME = 5
    LD_LIBRARY_PATH = /home/avp/aio:/usr/lib/jni
    BROKER_CLIENT = aio, AIOBroker, AIO_104AI128
    [[constants]]
        # Relays can be either high logic or low logic.  Switch them here if necessary
        RELAY_ON = 1
        RELAY_OFF = 0
    [[aliases]]    # These are used to assign aliases to the pins. relay_ aliases can be commented out if they don't exist
        empty_1 = relay_0
        relay_wind = relay_1
        middle_port = relay_2
        left_port = relay_3
        empty_2 = relay_4
        empty_3 = relay_5
        relay_sonde = relay_6
        relay_modem_reset = relay_7
#    [[defaults]]  I don't think this is used.  If so, need to deal with relay sense.
#        relay_5V = 1 # If this is off, the winch does bad things when it moves.


[serial]
# /dev/ttyUSB0 was included twice because code expects this to be a list
    SERIAL_DEVICES = /dev/ttyUSB0, /dev/ttyUSB1
    SERIAL_BAUDS = 4800, 4800


[db]    # PostgreSQL
    enabled = True    # For development?
    host = localhost    # defaults to socket.gethostbyname()
    PORT = 5432
    DB_USER = pi
    DB_PASS = ims6841
    DB_CHECK_TD = 1800    # period for serious fault checking defaults to 1800
    DEBUG_TABLE_DAYS = 30    # Number of days of entries to keep
    IPC_TABLE = avp_ipc

[cast]
#    PRE_CAST_DELAY = 10.0    #Seconds to log data at top before moving sonde
#    POST_CAST_DELAY = 10.0    #Seconds to log data at bottom after moving sonde
#    LISST_START_OFFSET = 0.10    # Extra distance in meters to lower below waterline to ensure no air is sucked in.
#    MAX_TARGET_ERROR = 0.2    # (meters) If a cast isn't within this distance of the target at the bottom, a warning is generated.


[ping_test]
    PING_TARGET = google.com    # Who to ping
    MAX_TRIES = 5    # Failed attempts before rebooting modem
    SLEEP_TIME = 90    # Seconds to sleep between pings
    RESET_COMMAND = /home/pi/bin/cyclemodem.sh
