#
# avp.ini
# Initialization file for avp python code
# 
# Notes. In all cases, if host is absent, `hostname` is used
#
# Common values:
# host = host to which instrument is connected to. If absent, `hostname` is used,
# PORT = socat port
# STALE_TIME = Number of seconds after which data is considered stale
# BROKER_CLIENT = instance name, broker client class name, broker client module name
# [[constants]] these become attributes of the broker client
# [[defaults]] these are values which should be set
# [[aliases]] Assigns alias to a broker's parameter
# First the brokers

[broker]    # Common to all brokers
    SOCKET_TIMEOUT = 15    # Default socket timeout on rpc calls to broker servers.
    RESUME_TIMEOUT = 50    # Default timeout for resume_broker. This should be higher than broker's built in timeout.

[aio] # aio must be the first broker in this list.
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8880
    STALE_TIME = 5
    LD_LIBRARY_PATH = /home/avp/aio:/usr/lib/jni
    BROKER_CLIENT = aio, AIOBroker, AIO_104AI128
    [[constants]]
#        VOLTAGE_MULTIPLIER = 3.089
        VOLTAGE_MULTIPLIER = 1.561	# value for june 2017 box
        LOAD_CURRENT_OFFSET = 0.515
        LOAD_CURRENT_MULTIPLIER = 7.519
        CHARGE_CURRENT_OFFSET = 0.4369
        CHARGE_CURRENT_MULTIPLIER = 9.259
	# Relays can be either high logic or low logic.  Switch them here if necessary
	RELAY_ON = 0
	RELAY_OFF = 1
    [[aliases]]    # These are used to assign aliases to the pins. Works for any broker.
        voltage_ADC = adc_0
        load_current_ADC = adc_1
        charge_current_ADC = adc_2
        humidity_ADC = adc_3
        relay_ADCP = pin_a_0
        relay_sounder = pin_a_1
        relay_LISST = pin_a_2
        relay_ISCO = pin_a_3
        relay_fut_unreg = pin_a_4
        relay_fut_reg = pin_a_5
        relay_sonde = pin_a_6
        relay_wind = pin_a_7
        relay_modem_reset = pin_b_0
        relay_24V = pin_b_1
        reset_MM3 = pin_b_2
        limit_switch_enable = pin_b_3
        tension_switch_enable = pin_b_4
        relay_5V = pin_b_5
        up_button = pin_c_1
        down_button = pin_c_2
#    [[defaults]]  I don't think this is used.  If so, need to deal with relay sense.
#        relay_5V = 1 # If this is off, the winch does bad things when it moves.

[mm3]    # Motion Mind 3
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8881
    STALE_TIME = 4
    INSTRUMENT_PORT = 55231
    BROKER_CLIENT = mm3, MM3Broker, mm3
    [[constants]]
        AMPS_LIMIT = 3500    # Actually in mA
        DEFAULT_SPEED = 5    # A safe slow speed
        MIN_SPEED = 1    # This or below is considered stopped.
    # For the positioned, it is assumed that position = 0 is at the top when the limit switch is tripped. Note that this may vary depending on sonde bail orientation
    [[defaults]]
        # IMPORTANT NOTE
        # Unlike any other values in this file, these are not referenced specifically by name anywhere.
        # They MUST match the mm3's parameter names to be effective.
        p_term = 20000    # Loop tuning.
        i_term = 20    # Loop tuning. (35 increased current errors due to acceleration, 25 had occasional current errors)
        d_term = 0    # Loop tuning.
        pid_scalar = 15    # Loop tuning.
        active_stop = 1    # Ties motor leads to ground when stopped.
        ret_pos = 0    # Don't return position with every request.
        ret_time = 0    # Don't return time with every request.
        ret_vel = 0    # Don't return velocity with every request.
        deadband = 250    # If enable_db is 1
    [[aliases]]    # These are used to assign aliases to the pins. Works for any broker.
        tension_switch = pos_limit_switch
        photo_switch = neg_limit_switch
[Y32500]    # RM Young wind instrument
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8882
    STALE_TIME = 4
    INSTRUMENT_PORT = 55232
    BROKER_CLIENT = wind, WindBroker, y32500
    [[constants]]
        # These are used for monitoring platform heading
        COMPASS_TARGET = 10    # The nominal platform heading
        COMPASS_MARGIN = 50    # The maximum error allowed. More may indicate a mooring failure.

[sonde]    # YSI 6600 or 6600v2
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8883
    STALE_TIME = 4
    INSTRUMENT_PORT = 55233
    BROKER_CLIENT = sonde, SondeBroker, ysi6600
    [[constants]]
        SAMPLE_TIMEOUT = 40    # Number of seconds to wait for timeout on a connect
        INSTRUMENT_OFFSET = 0.254    # Distance from pressure sensor to bottom of sonde cage
        BOTTOM_OFFSET = 0.300    # Distance to stop before touching the bottom (was touching occasionally at .2)
        WIPE_TIMEOUT = 120    # 
        inwater_cond = 0.07    # The initial threshold for determining id conductivity sensor is in the water
        INWATER_DEPTH = .010    # Any prssure above this is considered in the water.
        SONDE_STARTUP_TIME = 5.0    # Time in seconds to wait for sonde after sampling has started
        PRESSURE_ERROR = 0.008    # Pressure error above which a re-calibration should be done.

[sounder]    # Generic NMEA0183 sounder
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8887
    STALE_TIME = 4
    INSTRUMENT_PORT = 55237
    BROKER_CLIENT = sounder, SounderBroker, sounder

[lisst]    # LISST StreamSide
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8886
    STALE_TIME = 20
    INSTRUMENT_PORT = 55236
    BROKER_CLIENT = lisst, LisstBroker, lisst
    [[constants]]
        SAMPLE_LATENCY = 9    # time in seconds for a water sample to travel from sonde to LISST.
        FLUSH_TIME = 12    # Duration of flush (valve open to valve closed)
        ZERO_FLUSH_DELAY = 4    # Time between end of flush and start of zero data collection
        ZERO_TIME = 10    # Duration of zero sample
        FILE_TIMEOUT = 45    # Timeout for the get_file method. May not be necessary
        WATER_LEVEL_WARN = 0    # Warn of low water level. Set to -999.9 to disable
        WATER_LEVEL_MIN = -999.9    # No pumping when flush water is low. Set to -999.9 to disable

[isco]    # ISCO 6712
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8885
    STALE_TIME = 10
    INSTRUMENT_PORT = 55235
    BROKER_CLIENT = isco, IscoBroker, isco6712
    [[constants]]
        BOTTLE_SIZE = 1000
        NUM_BOTTLES = 24
        SAMPLE_TIMEOUT = 360    #  The sampling procedure shouldn't take this long.

[gps]
    host = localhost # defaults to socket.gethostbyname()
    PORT = 8890
    STALE_TIME = 4
    INSTRUMENT_PORT = 2947
    BROKER_CLIENT = gps, GpsBroker, gps
    [[constants]]
        # Lat, Lon in decimal
        ANCHOR_WATCH_LAT = 35.690
        ANCHOR_WATCH_LON = -79.082
        ANCHOR_WATCH_RADIUS = .120    #in km
        WARNING_REPEAT_TIME = 600    # in seconds
[adcp]
    # Future use
    #host = localhost # defaults to socket.gethostbyname()

# Now the non-broker values

[supervisor]
    # These may need to be updated with new version numbers
	RELEASE_NUMBER_FILE = /home/avp/javp/RELEASE
    JAVA_INSTALL_DIR = /home/avp/javp-		# append release number to complete
    JAVP_JAR = /lib/javp-					# append release number.jar to complete
    JSON_JAR = /lib/json-1.0.jar
    # JSON_JAR = /usr/share/java/json-lib.jar
    POSTGRES_JAR = /usr/share/java/postgresql-jdbc3.jar
    LOCAL_INTERFACE = 1    # Do we have a local interface
    #wDogModule = w62387hf_wdt    # can call modinfo to check it's there (not sure how to check version)
    #gpsDaemon = gpsd
    #gpsDaemonVersion = 2.95    # check with gpsd -V
    LOW_DRIVE_THRESHOLD = 0.10    # percent (defaults to 0.1)
    LOW_RAM_THRESHOLD = 0.25    # percent(defaults to 0.1)
    CPU_TEMP_THRESHOLD = 80    # degrees C (cat /proc/acpi/thermal_zone/THRM/temperature) (defaults to 60)
    # designed limit is 90 deg C
    LOW_BAT_VOLTAGE = 11.4    # lower limit for battery voltage (defaults to 11.2)
    SHUTDOWN_VOLTAGE = 10.7    # shuts down the system (defaults to 10.7)
    LOW_AMP_HOURS = -100    # down by N amp-hours  (defaults to -100)
    HIGH_HUMIDITY = 70.0    # Relative humidity  (defaults to 70)
    NOTIFY_EMAIL = whipple@email.unc.edu, neve@email.unc.edu
    HOME_PATH = /home/avp
    LOG_PATH = /data/log    # The log directory is here.
    CHECK_FREQ = 2    # How often to start do checks (in minutes)
    LOG_FREQ = 2    # How often to log to database.
    [[brokerList]]
        aio.conf = aio
        gpsd.conf = gps
        ysi_sonde.conf = sonde
#        ysi_exo.conf = sonde
        y32500.conf = wind
        sounder.conf = sounder
        mm3.conf = mm3 # Was 'motor'
        # These are turned off
        #isco.conf = isco
        #lisst.conf = lisst
[localInterface]
    ENABLED = True
    # TYPE can be ColdTears or Pertelian
    TYPE = ColdTears
    #TYPE = Pertelian
    BUTTON_MOVE_SPEED = 20    # Speed at which motor moves when button is pressed.
    WIFI_ON_INTERVAL = 120    # Minutes for Wifi timeout
    SONDE_SWAP_DURATION = 30    # Minutes before sonde swap routine times out

[serial]
    #    SERIAL_DEVICES = /dev/ttyS1, /dev/ttyS2, /dev/ttyS3, /dev/ttyS4, /dev/ttyS5, /dev/ttyS6, /dev/ttyS7, /dev/ttyS8, /dev/ttyS9
    #    SERIAL_BAUDS = 19200, 9600, 9600, 9600, 19200, 9600, 4800, 9600, 9600
    SERIAL_DEVICES = /dev/ttyS1, /dev/ttyS2, /dev/ttyS3, /dev/ttyS4, /dev/ttyS5, /dev/ttyS6, /dev/ttyS7, /dev/ttyS8
    SERIAL_BAUDS = 19200, 9600, 9600, 9600, 19200, 9600, 4800, 9600


[db]    # PostgreSQL
    enabled = True    # For development?
    #host = stones.dyndns.org # defaults to socket.gethostbyname()
    host = localhost # defaults to socket.gethostbyname()
    PORT = 5432
    DB_NAME = office
    DB_USER = postgres
    DB_PASS = ims6841
    #CAST_TABLE = avpX_cast    #Defaults to `hostname`_cast
    #LOG_TABLE = avpX_log    #Defaults to `hostname`_log
    DB_CHECK_TD = 1800    # period for serious fault checking defaults to 1800
    #DEBUG_TABLE = avpX_debug_log    #Defaults to `hostname`_debug_log
    DEBUG_TABLE_DAYS = 30    # Number of days of entries to keep
    #POWER_TABLE = avpX_power    #Defaults to `hostname`_power
    IPC_TABLE = avp_ipc
    #SCHEDULE_TABLE = avpX_schedule    #Defaults to `hostname`_schedule

[scheduler]
    PAUSE_MINUTES = 60    # After this many minutes paused, schedule will resume.
    MAX_SCHEDULED_TIME = 1800    # A scheduled item will be removed when it is this many seconds late
    PRE_CAST_SETUP_TIME = 180    # Time in seconds to allow before cast for setup

[cast]
    PRE_CAST_DELAY = 10.0    #Seconds to log data at top before moving sonde
    POST_CAST_DELAY = 10.0    #Seconds to log data at bottom after moving sonde
    LISST_START_OFFSET = 0.10    # Extra distance in meters to lower below waterline to ensure no air is sucked in.
    MAX_TARGET_ERROR = 0.2    # (meters) If a cast isn't within this distance of the target at the bottom, a warning is generated.

[winch]
    # These should be in [[constants]]
																				  
    ZERO_POS_MAX_ERROR = 10000    # Difference between known and expected top position above which the position register is reset.
    CAL_POSITION = 5000    # Raise sonde to this position to calibrate sonde.
    wl_position = 40434    # Updated by calibration procedure on 2013-04-24 11:30:35
    wl_press_position = 40028    # Updated by calibration procedure on 2013-04-24 11:30:35
    wl_cond_position = 30482    # Updated by calibration procedure on 2013-04-24 11:20:54
    SLOWDOWN_POSITION = 98000    # When retrieving, we can go fast below this point, but should slow down here.
    SLOWDOWN_DEPTH = .020    # When retrieving, slow speed above this depth (meters) MAY NOT NEED
    MAX_CAST_DEPTH = 3.9    # Maximum cast depth in meters
    CABLE_LENGTH = 12.0    # Maximum cast depth in meters based upon cable length.
    DRUM_DIAMETER = 0.32    # .33 wis slightly too big, .30 too small
    CLICKS_PER_REVOLUTION = 64000    # using the reinshaw
    POSITION_DB = 100    # Deadband when comparing position to desired_position
    # If these speeds are changed, amps values below may need adjustment
    SLOW_SPEED = 5    # Docking Speed
    MED_SPEED = 6    # Cast Speed
    FAST_SPEED = 35    # Retrieval speed
										
    [[amps]]
        [[[up]]]
            [[[[in]]]]
                high = 3500    # 2250  @ 35  , was tripping occasionaly at 3000
                med = 1500    # 700   @ 6
                low = 1400    # 1100 would occasionally trip on cold mornings.
            [[[[out]]]]
                high = 3500    # 2600  @ 35
                med = 3300    #
                low = 1800    # was tripping at 1000
        [[[down]]]
            [[[[in]]]]
                high = 1900    # 1750  @ 35
                med = 1000    # 480   @ 6 
                low = 1000    # 360   @ 5 
            [[[[out]]]]
                high = 1800    #
                med = 1000    # 640 would occasionally trip on cold mornings
                low = 900    # 300   @ 5 , was tripping @ 600 in cold weather.

[ping_test]
    PING_TARGET = 'google.com' # Who to ping
    MAX_TRIES = 5 # Failed attempts before rebooting modem
    SLEEP_TIME = 90  # Seconds to sleep between pings
    RESET_COMMAND = '/home/avp/bin/cyclemodem.sh'

[json]    # Error codes and their messages.
    # These aren't used yet. A better way to use them might be to assign each error number a priority
    # This number would be used to determine what kind of logging message is generated.
    #32768 to -32000: Pre-defined (and reserved) by JSON-RPC Specification 2.0
    -32700 = Parse error    # invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.
    -32600 = Invalid request    # The JSON sent is not a valid Request object.
    -32601 = Method not found    # The method does not exist / is not available.
    -32602 = Invalid params    # Invalid method parameter(s).
    -32603 = Internal error    # Internal JSON-RPC error.
    
    
    #-32099 to -32000 Server error
    #Reserve for implementation-defined server errors.
    
    
    #-31999 to -31990: System-level errors
    -31999 = System error
    -31998 = Timeout
    -31997 = I/O Error
    -31996 = Instrument response
    -31995 = Bad command    # A bad command was reported by the instrument. (MM3 only?)
    -31994 = Broker not connected to instrument.
    -31990 = Unspecified exception    # General Java exception for which no other error code exists.
    
    
    #-31989 to -31980: Sub-JSON Level Parse Errors
    -31989 = Unsupported request    # Requested method not supported.
    -31988 = Method parse    # Method could not be parsed.
    -31987 = ID parse    # Message ID could not be parsed.
    
    
    #-31979 to -31970: Set Request Errors
    -31979 = Unsupported set parameter    # Request is attempting to set an unsupported parameter.
    -31978 = Read-only set parameter    # Request is attempting to set a read-only parameter.
    
    
    #-31969 to -31960: Status Request Errors
    -31969 = Unsupported status parameter    # Request is attempting to poll an unsupported parameter.
    -31968 = Style parse error    # Style (verbose or terse) could not be parsed.
    
    
    #-31959 to -31950: Subscription Request Errors
    -31959 = Unsupported subscribe param    # Request is attempting to subscribe to an unsupported parameter.
    -31958 = Invalid subscription interval    # Request is attempting to create a subscription at an unsupported interval
    -31957 = "Update parse error "    # Update behavior (on change or on new) could not be parsed. 
    
    
    #-31949 to -31940: 
    -31949 = Invalid response    # ?Instrument returned an invalid response.
    -31948 = Invalid data    # ?Instrument returned data outside the acceptable range.
    
    
    #-31939 to -31930: Unsubscribe Request Errors
    -31939 = Subscription not found    # Request is attempting to unsubscribe from a subscription that cannot be found
    
    
    #-31929 to -31920: Control Token Errors
    -31929 = Token not available    # Acquire requested while control token is in use by another client
    -31928 = Token required    # Restricted method requested, but client does not have the control token
    
    
    #-31919 to -31910: Power Errors
    -31919 = Power set failed    # An attempt to set an instrument's power pin failed.
    -31918 = Power status failed    # An attempt to get an instrument's power pin status failed.
    -31917 = Broker is suspended
    -31916 = Instrument is Busy
