<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<title>AVP Monitor</title>
<!-- www.renci.org key
<script type="text/javascript"  src="http://www.google.com/jsapi?key=ABQIAAAA2RJMNl-kT1UeAr2m1UKjsxQ1LcvzDK1myG59NuUzsa6mHORK5hTWqdiZzNPVW53wLplgnKui3SUn4A"> </script>
-->
<script type="text/javascript"  src="http://www.google.com/jsapi?key=ABQIAAAA2RJMNl-kT1UeAr2m1UKjsxTargrnXhBDWeZvbOmD8UwnDDaFrRQ_W6sxhKoFvpbytC4G1c_TMCKRJQ
"> </script>
<script type="text/javascript"  src="http://www.renci.org/~kgamiel/js/jquery-1.5.1.min.js"></script>

<script type="text/javascript">
    //=================================================================
    // Start GOOGLE EARTH Load
    //=================================================================
    google.load("earth", "1");
    var ge;
    var GGG;
    var ge_loaded = 0;
    function initCB(instance) {
	ge = instance;
        GGG = instance;
        ge.getOptions().setFlyToSpeed(ge.SPEED_TELEPORT);
	ge.getWindow().setVisibility(true);
	ge.getLayerRoot().enableLayerById(ge.LAYER_TERRAIN, false);
	ge.getLayerRoot().enableLayerById(ge.LAYER_BORDERS, false);
	ge.getLayerRoot().enableLayerById(ge.LAYER_ROADS, false);
	zoomToNC();
	ge.getNavigationControl().setVisibility(ge.VISIBILITY_SHOW);
	ge_loaded = 1;
        on_page_load();
    }

    function failureCB(errorCode) {
	alert('You must install the Google Earth plugin to use this page');
    }

    function init() {
        google.earth.createInstance('map3d', initCB, failureCB);
    }

    google.setOnLoadCallback(init);

    /*
     * Helper function to zoom to our region of interest.
     */
    function zoomToNC() {
	var camera = ge.getView().copyAsCamera(
            ge.ALTITUDE_RELATIVE_TO_GROUND);
        // Set new latitude and longitude values
        camera.setLatitude(35.085556);
        camera.setLongitude(-76.691058);
        camera.setAltitude(600000);
        // Update the view in Google Earth
        ge.getView().setAbstractView(camera);
    }

    function zoomToCurrentLocation() {
	if(isNaN(_appData.curLat)) {
		return;
	}
	if(isNaN(_appData.curLon)) {
		return;
	}
        var camera = ge.getView().copyAsCamera(
            ge.ALTITUDE_RELATIVE_TO_GROUND);
        camera.setLatitude(Number(_appData.curLat));
        camera.setLongitude(Number(_appData.curLon));
        camera.setAltitude(1000);
        ge.getView().setAbstractView(camera);
        addPlacemark(_appData.curLat, _appData.curLon);
    }

    function addPlacemark(lat, lon) {
        var placemark = ge.createPlacemark('');
	var icon = ge.createIcon('');
	icon.setHref('http://maps.google.com/mapfiles/kml/paddle/red-circle.png');
	var style = ge.createStyle('');
	style.getIconStyle().setIcon(icon);
	style.getIconStyle().setScale(0.5);
        placemark.setStyleSelector(style);
        //placemark.setDescription(html);
        var point = ge.createPoint('');
       	point.setLatitude(Number(lat));
       	point.setLongitude(Number(lon));
        placemark.setGeometry(point);
        ge.getFeatures().appendChild(placemark);
    }


    //=================================================================
    // End GOOGLE EARTH Load
    //=================================================================

    function AppData() {
        this.curLat = NaN;
        this.curLon = NaN;
        this.windReadings = new Array();
        this.gpsReadings = new Array();
        this.load_wind = function() {
            var readings = document.getElementsByTagName('reading');
            if((readings == undefined) || (readings.length==0)) {
                alert("Failed to locate wind element");
                return;
            }
            for(var i=0; i < readings.length; i++) {
                var reading = readings[i];
                if(reading.attributes.length == 9) {
                    this.windReadings.push(new WindReading(reading));
                } else {
                    var mr = new GpsReading(reading);
                    this.gpsReadings.push(mr);
                    this.curLat = mr.lat;
                    this.curLon = mr.lon;
                }
            }
        }
/*        this.load_gps = function() {
            var gps = document.getElementsByTagName('gps');
            if(gps == undefined) {
                //alert("Failed to locate gps element");
                return;
            }
            var readings = gps.item(0).childNodes;
            for(i=0;i<readings.length;i++) {
                var reading = readings.item(i);
                if(reading.nodeName == 'READING') {
                    var mr = new GpsReading(reading);
                    this.gpsReadings.push(mr);
                    this.curLat = mr.lat;
                    this.curLon = mr.lon;
                }
            }
        }*/
    }


    function GpsReading(e) {
        this.sample_time = e.getAttribute('sample_time');
        this.lat = e.getAttribute('lat');
        this.lon = e.getAttribute('lon');
    }
    function WindReading(e) {
        this.sample_time = e.getAttribute('sample_time');
        this.speed_scalar = e.getAttribute('speed_scalar');
        this.dir_unit_vector = e.getAttribute('dir_unit_vector');
        this.speed_std = e.getAttribute('speed_std');
        this.speed_vector = e.getAttribute('speed_vector');
        this.dir_vector = e.getAttribute('dir_vector');
        this.gust_speed = e.getAttribute('gust_speed');
        this.gust_dir = e.getAttribute('gust_dir');
        this.gust_time = e.getAttribute('gust_time');
    }

    /*
     * Called when page loads.
     */
    function on_page_load() {
    	_appData = new AppData();
        _appData.load_wind();
        //_appData.load_gps();
        zoomToCurrentLocation();
        updateDataDisplay();
    }



    /*
     * Called when page unloaded
     */
    function on_page_unload() {
    }

    /*
     * Set cursor.
     */
    function setCursor(n, cursorStyle) {
        $('body').css('cursor', cursorStyle);

    }

    function addRow(tbl, name, value) {
        var tr = document.createElement('tr');
        tbl.appendChild(tr);
        var td = document.createElement('td');
        tr.appendChild(td);
        td.innerHTML = name;
        td = document.createElement('td');
        tr.appendChild(td);
        td.innerHTML = value;
    }
    function updateDataDisplay() {
        //$('#data').children().remove();
        var layersDiv = document.getElementById('data');
        var tbl = document.createElement('table');
        tbl.setAttribute('id', 'data_table');
        tbl.setAttribute('border', '1');
        layersDiv.appendChild(tbl);

        addRow(tbl, "last_wind_time", _appData.windReadings[0].sample_time);
        addRow(tbl, "speed_scalar", _appData.windReadings[0].speed_scalar);
        addRow(tbl, "dir_unit_vector", _appData.windReadings[0].dir_unit_vector);
        addRow(tbl, "speed_std", _appData.windReadings[0].speed_std);
        addRow(tbl, "speed_vector", _appData.windReadings[0].speed_vector);
        addRow(tbl, "dir_vector", _appData.windReadings[0].dir_vector);
        addRow(tbl, "gust_speed", _appData.windReadings[0].gust_speed);
        addRow(tbl, "gust_dir", _appData.windReadings[0].gust_dir);
        addRow(tbl, "gust_time", _appData.windReadings[0].gust_time);
        addRow(tbl, "last_gps_time", _appData.gpsReadings[0].sample_time);
        addRow(tbl, "lat", _appData.gpsReadings[0].lat);
        addRow(tbl, "lon", _appData.gpsReadings[0].lon);
    }


</script>
<style type="text/css">
html, body { height:93%; }
body {
    margin: 5px;
    padding: 5px;
    cursor: auto;
}
/* Division that contains list of checkboxes */
#data {
    float: left;
    overflow: auto;
    background: #cccccc;
    clear: left;
    font-family: Verdana, sans-serif;
    font-size: 24;
	height: 80%;
}
#pic {
	float: left;
	clear: left;
        width: 150px;
        height: 150px;
}
img{
    display:block;
}
#header {
	font-family: Verdana, sans-serif;
	clear:right;
}
/* Google Earth div */
#map3d {
    background: #fff;
    overflow:hidden;
	float: left;
	height: 80%;
	width: 50%;
}
#avp_image {
        width: 100%;
        height: 100%;
}
</style>
</head>

<body>
<div id="pic"><img id="avp_image" src="avp0_640_480.png"></div>
<div id="header"><b>AVP Monitor</b><br>
<i>This page shows realtime data acquired from the AVP.  Refresh the page for updated data.<p>Currently, it displays the most recent GPS and Wind sensor readings.</i>
</div>
    <div id="data"></div>
    <div id="map3d"></div>

  <?
   //echo "<xml>";
  $link = pg_Connect("host=eddy.ims.unc.edu dbname=avp user=postgres password=sonde");
	if($link == "") {
		echo "<B>Failed to connect to database</b><br>";
	}
  $result = pg_exec($link, "select * from baypt_wind order by \"sample_time\" desc limit 1 offset 0");
	if($result == "") {
		echo "<B>Failed to search table</b><br>";
	}
  $numrows = pg_numrows($result);
    echo "<wind>";
   // Loop on rows in the result set.
   for($ri = 0; $ri < $numrows; $ri++) {
    echo "<reading ";
    $row = pg_fetch_array($result, $ri);
    echo "sample_time=\"", $row["sample_time"], "\" ";
    echo "speed_scalar=\"", $row["speed_scalar"], "\" ";
    echo "dir_unit_vector=\"", $row["dir_unit_vector"], "\" ";
    echo "speed_std=\"", $row["speed_std"], "\" ";
    echo "speed_vector=\"", $row["speed_vector"], "\" ";
    echo "dir_vector=\"", $row["dir_vector"], "\" ";
    echo "gust_speed=\"", $row["gust_speed"], "\" ";
    echo "gust_dir=\"", $row["gust_dir"], "\" ";
    echo "gust_time=\"", $row["gust_time"], "\" ";
    echo "/>\n";
   }
    echo "</wind>";
  $result = pg_exec($link, "select * from baypt_gps order by \"sample_time\" desc limit 1 offset 0");
  $numrows = pg_numrows($result);
    echo "<gps>";
   // Loop on rows in the result set.
   for($ri = 0; $ri < $numrows; $ri++) {
    echo "<reading ";
    $row = pg_fetch_array($result, $ri);
    echo "sample_time=\"", $row["sample_time"], "\" ";
    echo "lat=\"", $row["lat"], "\" ";
    echo "lon=\"", $row["lon"], "\" ";
    echo "/>\n";
   }
    echo "</gps>";
    //echo "</xml>";
   pg_close($link);
  ?>
</body>
</html>
